import time
import requests
from state import get_status, get_balance, get_report, get_day, get_month, get_info
from phrases import unexpected_error

TELEGRAM_TOKEN = "7058796866:AAFxp1h5uqIqWkn7T-1bLtrWASp3mu8zwpQ"
CHAT_ID = "5749742792"
BASE_URL = f"https://api.telegram.org/bot{TELEGRAM_TOKEN}"

def send_update(message):
    url = f"{BASE_URL}/sendMessage"
    payload = {
        "chat_id": CHAT_ID,
        "text": message
    }
    try:
        response = requests.post(url, json=payload)
        print(f"‚úÖ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ: {message}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ Telegram: {e}")

def check_for_commands():
    print("üõ∞Ô∏è –û–∂–∏–¥–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥ –æ—Ç –≥–æ—Å–ø–æ–¥–∏–Ω–∞...")
    last_update_id = None

    while True:
        try:
            params = {'timeout': 10}
            if last_update_id:
                params['offset'] = last_update_id + 1

            url = f"{BASE_URL}/getUpdates"
            response = requests.get(url, params=params).json()
            updates = response.get("result", [])

            for update in updates:
                message = update.get("message")
                if not message or "text" not in message:
                    continue  # –∏–≥–Ω–æ—Ä–∏—Ä—É–µ–º –Ω–µ —Ç–µ–∫—Å—Ç–æ–≤—ã–µ

                chat_id = message["chat"]["id"]
                text = message["text"].strip()
                update_id = update["update_id"]

                if chat_id != int(CHAT_ID):
                    print("‚ö†Ô∏è –ö–æ–º–∞–Ω–¥–∞ –Ω–µ –æ—Ç –≤–ª–∞–¥–µ–ª—å—Ü–∞. –ò–≥–Ω–æ—Ä–∏—Ä—É—é.")
                    continue

                print(f"üì© –ö–æ–º–∞–Ω–¥–∞ –ø–æ–ª—É—á–µ–Ω–∞: {text}")
                last_update_id = update_id  # –∑–∞–ø–æ–º–Ω–∏—Ç—å –ø–æ—Å–ª–µ–¥–Ω–µ–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–æ–µ

                # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥:
                if text == "/status":
                    send_update(get_status())
                elif text == "/balance":
                    send_update(get_balance())
                elif text == "/report":
                    send_update(get_report())
                elif text == "/start":
                    send_update("üëë –° —à–∞—Ö—Ç—ã –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è –≤–∞—à–µ –í–µ–ª–∏—á–∏–µ.\n"
                                "üíé –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, –≥–æ—Å–ø–æ–¥–∏–Ω –ê–Ω–¥—Ä–µ–π.\n"
                                "üè∞ –ê–ª–º–∞–∑–Ω–∞—è –ò–º–ø–µ—Ä–∏—è –≥–æ—Ç–æ–≤–∞ –∫ –ø—Ä–∏—É–º–Ω–æ–∂–µ–Ω–∏—é –±–æ–≥–∞—Ç—Å—Ç–≤.\n"
                                "üì¶ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—ã: /balance, /status, /report")
                elif text == "/day":
                    send_update(get_day())
                elif text == "/month":
                    send_update(get_month())
                elif text == "/info":
                    send_update(get_info())
                else:
                    print(f"‚ùì –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞: {text} ‚Äî –∏–≥–Ω–æ—Ä–∏—Ä—É–µ—Ç—Å—è.")

            time.sleep(1)

        except Exception as e:
            print("‚ùó –û—à–∏–±–∫–∞ –≤ —Ü–∏–∫–ª–µ –∫–æ–º–∞–Ω–¥:", e)
            send_update(unexpected_error())
            time.sleep(5)